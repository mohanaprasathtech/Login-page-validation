{"version":3,"sources":["Loginform.js","App.js","reportWebVitals.js","index.js"],"names":["Loginform","Login","error","useState","name","email","password","details","setdetails","action","onSubmit","e","preventDefault","className","htmlFor","type","id","onChange","target","value","App","adminuser","user","setUser","setError","onClick","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAoCeA,MAjCf,YAAqC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MACxB,EAA0BC,mBAAS,CAACC,KAAK,GAAGC,MAAM,GAAGC,SAAS,KAA9D,mBAAMC,EAAN,KAAcC,EAAd,KAOA,OACI,8BACI,sBAAMC,OAAO,GAAGC,SAPxB,SAAsBC,GAClBA,EAAEC,iBAEFX,EAAMM,IAIF,SACI,sBAAKM,UAAU,UAAf,UACI,uCACU,IAATX,EAAe,qBAAKW,UAAU,UAAf,SAA0BX,IAAgB,GAC1D,sBAAKW,UAAU,QAAf,UACI,uBAAOC,QAAQ,OAAf,mBACA,uBAAOC,KAAK,OAAOX,KAAK,OAAOY,GAAG,OAAOC,SAAU,SAAAN,GAAIH,EAAW,2BAAID,GAAL,IAAcH,KAAKO,EAAEO,OAAOC,eAEjG,sBAAKN,UAAU,QAAf,UACI,uBAAOC,QAAQ,QAAf,oBACA,uBAAOC,KAAK,QAAQX,KAAK,QAAQY,GAAG,QAAQC,SAAU,SAAAN,GAAIH,EAAW,2BAAID,GAAL,IAAcF,MAAMM,EAAEO,OAAOC,eAErG,sBAAKN,UAAU,QAAf,UACI,uBAAOC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,WAAWX,KAAK,WAAWY,GAAG,WAAWC,SAAU,SAAAN,GAAIH,EAAW,2BAAID,GAAL,IAAcD,SAASK,EAAEO,OAAOC,eAEjH,oDCkBLC,MA1Cf,WACE,IAAMC,EACG,iBADHA,EAEK,WAGX,EAAoBlB,mBAAS,CAACC,KAAM,GAAGC,MAAM,KAA7C,mBAAMiB,EAAN,KAAWC,EAAX,KACA,EAAsBpB,mBAAS,IAA/B,mBAAMD,EAAN,KAAYsB,EAAZ,KAqBA,OACE,qBAAKX,UAAU,MAAf,SACsB,IAAdS,EAAKjB,MACJ,sBAAKQ,UAAU,UAAf,UACE,0CAAY,+BAAOS,EAAKlB,UACxB,wBAAQqB,QARrB,WACEF,EAAQ,CAACnB,KAAK,GAAGC,MAAM,MAOZ,uBAGH,cAAC,EAAD,CAAWJ,MA3BrB,SAAeM,GAGTA,EAAQF,OAASgB,GAAmBd,EAAQD,UAAYe,EAE1DE,EAAQ,CACNnB,KAAKG,EAAQH,KACbC,MAAME,EAAQF,SAIhBqB,QAAQC,IAAI,SACZH,EAAS,aAesBtB,MAAOA,OC7B7B0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bd91c9da.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport './Loginform.css';\r\nfunction Loginform({ Login, error}) {\r\n    const[details,setdetails]=useState({name:\"\",email:\"\",password:\"\"});\r\n\r\n    function handlesubmit(e) {\r\n        e.preventDefault();\r\n\r\n        Login(details);\r\n    }\r\n    return (\r\n        <div>\r\n            <form action=\"\" onSubmit={handlesubmit}>\r\n                <div className=\"in-form\">\r\n                    <h2>Login</h2>\r\n                    {error != \"\" ? (<div className=\"err-msg\">{error}</div>) : \"\"}\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"name\">Name:</label>\r\n                        <input type=\"text\" name=\"name\" id=\"name\" onChange={e=>{setdetails({...details, name:e.target.value})}}/>\r\n                    </div>\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" onChange={e=>{setdetails({...details, email:e.target.value})}}/>\r\n                    </div>\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <input type=\"password\" name=\"password\" id=\"password\" onChange={e=>{setdetails({...details, password:e.target.value})}}/>\r\n                    </div>\r\n                    <button>Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loginform;\r\n","import { useState } from 'react';\nimport './App.css';\nimport Loginform from './Loginform';\n\n\nfunction App() {\n  const adminuser = {\n    email: \"test@gmail.com\",\n    password:\"test@123\"\n  };\n\n  const[user,setUser]=useState({name: \"\",email:\"\"});\n  const[error,setError]=useState(\"\");\n\n  function Login(details) {\n    \n\n    if (details.email == adminuser.email && details.password == adminuser.password) {\n      // console.log(\"Loged in\");\n      setUser({\n        name:details.name,\n        email:details.email\n      });\n    }\n    else{\n      console.log(\"error\");\n      setError(\"Invalid\");\n    }\n  }\n\n  function Logout() {\n    setUser({name:\"\",email:\"\"});\n  }\n  return (\n    <div className=\"App\">\n           {user.email != \"\" ? (\n             <div className=\"welcome\">\n               <h1>WELCOME <span>{user.name}</span></h1>\n               <button onClick={Logout}>Logout</button>\n             </div>\n           ) : (\n            <Loginform Login={Login} error={error}/>\n           )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}